name: Package Docker Image

on:
  push:
    branches: 
      - main
    paths:
      - "**"
      - "!**.md"

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Install Requirements
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        pip install -r ./requirements.txt
    - name: Run Pylint
      run: |
        pylint ./*.py */*.py kvstore -E

  build:
    runs-on: ubuntu-latest
    needs: lint-test
    steps:
    - uses: actions/checkout@v2

    - name: Get branch name
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: get_branch

    - run:   echo "##[set-output name=reponame;]$(echo ${GITHUB_REPOSITORY} | awk -F / '{print $2}'| tr '[:upper:]' '[:lower:]' | sed -e 's/:refs//'})"
      shell: bash
      id: get_repo

    - name: Get commit id
      run: echo "##[set-output name=version;]$(echo `git ls-remote https://${{ secrets.TOKEN }}@github.com/nileshbhadana/${{ github.event.repository.name }}.git ${{ steps.get_branch.outputs.branch }} | awk '{ print $1}' | cut -c1-7`)"
      id: get_version

    - name: Set up Buildx 
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to GitHub Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ secrets.USER }}
        password: ${{ secrets.TOKEN }}
    
    - name: Build and push docker image
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ghcr.io/nileshbhadana/${{ steps.get_repo.outputs.reponame }}-${{ steps.get_branch.outputs.branch }}:latest
          ghcr.io/nileshbhadana/${{ steps.get_repo.outputs.reponame }}-${{ steps.get_branch.outputs.branch }}:${{ steps.get_version.outputs.version }}
        build-args: |
          ACCESS_TOKEN_USR=${{ secrets.USER }}
          ACCESS_TOKEN_PWD=${{ secrets.TOKEN }}